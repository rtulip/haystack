enum struct Foo<T> {
    T: Bar
    []: _
}

impl<T> Print<Foo<T>>
requires: [Print<T>] {
    fn print(Foo<T>) match {
        Foo::Bar as [t] { t print }
        Foo::_ { "_" print }
    }
}

fn into_foo_bar<T>(T) -> [Foo<T>::Bar] {
    cast(Foo<T>::Bar)
}

fn main() {

    1 into_foo_bar       println
    [] cast(Foo<u64>::_) println
    "Hello World"        println 
    [] cast(Foo<Str>::_) println
}