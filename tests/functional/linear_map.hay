include "std/linear_map.hay"

fn main() {
    
    Map.new::<u64> as [mut map]
    "one" 0 *map Map.insert drop
    "two" 2 *map Map.insert drop
    "three" 3 *map Map.insert drop

    "one" 1 *map Map.insert as [duplicate] {
        &duplicate Option.is_some if {
            "Replaced value at key `one`: " print duplicate Option.unwrap println
        } else {
            "Didn't replace when I should have" println
            1 exit 
        }
    }

    "one"   &map Map.get Option.unwrap @ println
    "two"   &map Map.get Option.unwrap @ println
    "three" &map Map.get Option.unwrap @ println
    "four"  &map Map.get as [option] 
    &option Option.is_none if {
        "Didn't find key `four`" println 
    } else {
        "Found an unexpected value for key `four`" println
        1 exit 
    }

}
