include "std.hay"
include "alloc.hay"
struct MyVec<T> {

    Arr<T>: slice
    u64:    len

impl:
    fn MyVec.new<T>() -> [MyVec<T>] {

        32 malloc::<T>
        0
        cast(MyVec)
    }

    fn MyVec.push<T>(T: item *MyVec<T>: ptr) {
        ptr @ as [self]
        item self::len self::slice Arr.set
        self::slice self::len 1 + cast(MyVec) ptr !
    }

    fn MyVec.get<T>(u64: idx *MyVec<T>: ptr) -> [T] {

        ptr @ as [self]
        idx self::slice Arr.get

    }
}

fn main() {

    12345 MyVec.new::<u64> "Hello World" as [n list str]
    0 while dup 10 < {
        dup &list MyVec.push
        1 +
    }

    0 while dup 10 < {
        dup &list MyVec.get putlnu
        1 +
    }

    &str @ putlns
    &n @ putlnu


}