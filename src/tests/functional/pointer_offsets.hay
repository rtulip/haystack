include "std/assert.hay"
struct Foo {
    pub u8: u8
    pub char: char
    pub bool: bool
    pub Str: string
}

struct Bar {
    pub bool: bool
    pub Foo: foo
    pub u64: number
}

fn test_ptr_offset(*Bar: bar) {
    bar::foo::string @ println
    "bar::bool:      " print bar::bool      @ println
    "bar::foo::u8:   " print bar::foo::u8   @ println
    "bar::foo::char: " print bar::foo::char @ println
    "bar::foo::bool: " print bar::foo::bool @ println
    "bar::number:    " print bar::number    @ println

    bar::bool      @ false == assert
    bar::foo::u8   @ 123u8 == assert 
    bar::foo::char @ 'q'   == assert 
    bar::foo::bool @ true  == assert 
    bar::number    @ 54321 == assert 
}

fn main() {

    123u8 'q' true "Hello World!" cast(Foo) as [f]
    false f 54321 cast(Bar) as [mut bar]
    *bar test_ptr_offset

}