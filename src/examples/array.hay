include "std.hay"

var Str[1024]: strings

fn Arr.set<T>(T: value u64: idx Arr<T>: arr) {

    idx arr::size >= if {
        "Out of bounds!!!!" write
    }
    value arr::data sizeOf(T) idx * ptr+  !
}

fn Arr.get<T>(u64: idx Arr<T>: arr) -> [T] {
    idx arr::size >= if {
        "Out of bounds!!!!" write
    }
    arr::data sizeOf(T) idx * ptr+ @
}

fn main() {

    strings @ var [x]

    "Hello World1\n" 0 x Arr.set
    "Hello World2\n" 1 x Arr.set
    "Hello World3\n" 2 x Arr.set

    0 while dup 3 < {
        var [i]
        i x Arr.get write
        i 1 + 
    } drop
    


}