include "std.hay"
enum Marker {
    LeftBrace
    RightBrace
    LeftParen
    RightParen
    LeftBracket
    RightBracket
    Colon
    DoubleColon
    Arrow
}

fn Marker.format(HString: s Marker: self) -> [HString] {
    s '`' HString.push
    self Marker::LeftBrace == if {
        '{' HString.push
    } else self Marker::RightBrace == if {
        '}' HString.push
    } else self Marker::LeftParen == if {
        '(' HString.push
    } else self Marker::RightParen == if {
        ')' HString.push
    } else self Marker::LeftBracket == if {
        '[' HString.push
    } else self Marker::RightBracket == if {
        ']' HString.push
    } else self Marker::Colon == if {
        ':' HString.push
    } else self Marker::DoubleColon == if {
        "::"  HString.push_str
    } else self Marker::Arrow == if {
        "->" HString.push_str
    } else {
        "\nMarker.fput Unreachable!" putlns
        1 exit
    }
    '`' HString.push
}