include "std.hay"

struct Foo {
    u64: bar
}

struct Pair<T> {
    T: first 
    T: second
}

struct Quad<A B> {
    Pair<A>: a
    Pair<B>: b
}

fn into_quad<A B>(Pair<A>: a Pair<B>: b) -> [Quad<A B>] {
    a::first a::second cast(Pair)
    b
    cast(Quad)
}

fn main() {

    // stack: [u64 u64] => Pair<u64>
    1 2 cast(Pair)

    "World" "Hello" cast(Pair)

    into_quad as [quad]

    quad::b as [pair] {
        pair::first pair::second
    } putlns putlns
    quad::a as [pair] {
        pair::first pair::second
    } putlnu putlnu

}