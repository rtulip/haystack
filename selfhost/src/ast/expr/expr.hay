include "selfhost/src/ast/expr/accessor.hay"
include "selfhost/src/ast/expr/annotated_call.hay"
include "selfhost/src/ast/expr/as.hay"
include "selfhost/src/ast/expr/cast.hay"
include "selfhost/src/ast/expr/ident.hay"
include "selfhost/src/ast/expr/if.hay"
include "selfhost/src/ast/expr/literal.hay"
include "selfhost/src/ast/expr/operator.hay"
include "selfhost/src/ast/expr/return.hay"
include "selfhost/src/ast/expr/size_of.hay"
include "selfhost/src/ast/expr/syscall.hay"
include "selfhost/src/ast/expr/unary.hay"
include "selfhost/src/ast/expr/var.hay"
include "selfhost/src/ast/expr/while.hay"

enum ExprTag {
    Literal
    Operator
    Unary
    Syscall
    Cast
    Ident
    Accessor
    If
    As
    Var
    While
    AnnotatedCall
    SizeOf
    Return
}

union ExprKind {
    LiteralExpr: Literal
    OperatorExpr: Operator
    UnaryExpr: Unary
    SyscallExpr: Syscall
    CastExpr: Cast
    IdentExpr: Ident
    AccessorExpr: Accessor
    IfExpr: If
    AsExpr: As
    VarExpr: Var
    WhileExpr: While
    AnnotatedCallExpr: AnnotatedCall
    SizeOfExpr: SizeOf
    ReturnExpr: Return
}

struct Expr {
    ExprTag: tag
    ExprKind: kind
}